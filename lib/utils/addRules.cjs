// NOTICE: This file is generated by Rollup. To modify it,
// please instead edit the ESM counterpart and rebuild with Rollup (npm run build).
'use strict';

const validateTypes = require('./validateTypes.cjs');
const levn = require('levn');

/**
 * @param { string[] | string } rules
 * @summary used to parse --rule(s) argument
 */
function addRules(rules) {
	/** @type { import('stylelint').Config } */
	const config = { rules: {} };

	if (Array.isArray(rules)) {
		const regexp = /^(['"]?)[a-z/]+(?:-[a-z]+)*\1\s*:.*/;

		rules
			.map((item) => item.trim())
			.forEach((str) => {
				if (str.startsWith('[') || !regexp.test(str)) throw Error('--rule argument is malformed.');

				const rule = levn.parse('Object', str);

				config.rules = { ...config.rules, ...rule };
			});
	} else if (validateTypes.isString(rules)) {
		config.rules = levn.parse('Object', rules);
	}

	return config;
}

module.exports = addRules;
